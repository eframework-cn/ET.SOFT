#!/bin/sh

## setup lfs
command -v git-lfs >/dev/null 2>&1 || { echo >&2 "\nThis repository is configured for Git LFS but 'git-lfs' was not found on your path. If you no longer wish to use Git LFS, remove this hook by deleting '.git/hooks/post-checkout'.\n"; exit 2; }
git lfs post-checkout "$@"

## setup user info
email=""
name=""

remote="$([[ $(git remote | wc -l) -eq 1 ]] && git remote || git remote | grep "^origin$")"
repo="$(git config --local remote.${remote}.url)"

arr=(${repo//@/ })
host=${arr[1]}
arr=(${host//:/ })
host=${arr[0]}

sig=false
while read line; do
  if [[ $sig == false ]]; then
    if [[ $line =~ "Host $host" ]]; then
      sig=true
    fi
  else
    if [[ $line =~ "User " ]]; then
      arr=(${line//User / })
      name="$(echo ${arr[0]})"
      email="${name}@${host}"
      break
    fi
  fi
done < ~/.ssh/config

lname="$(git config --local user.name)"
if [[ $lname != $name && $name != "" && $name != "git" ]]; then
	git config user.name $name
	echo "set repo ${repo}'s user.name to ${name}"

	git config user.email ${email}
	echo "set repo ${repo}'s user.email to ${email}"
fi

## do git-crypt
root=$GIT_DIR
root=${root/.git/}
root=${root/modules/}
if [ -f $root"/.secrect.sh" ]; then
	if [ ! -d $GIT_DIR"/git-crypt" ]; then
		$root"/.secrect.sh"
	fi
fi

# setup submodules
if [[ $GIT_DIR =~ "/.git/modules" ]]; then
  sroot="$(git rev-parse --show-superproject-working-tree)"
  lbranch="$(git rev-parse --abbrev-ref HEAD)"
  branch="master"
  sig=false
  if [ -f $sroot"/.gitmodules" ]; then
    while read line; do
      if [[ $sig == false ]]; then
        if [[ $line =~ $repo ]]; then
          sig=true
        fi
      else
        if [[ $line =~ "branch = " ]]; then
          branch="$(echo ${line/branch = /})"
          break
        fi
      fi
    done < $sroot"/.gitmodules"
  fi
  if [[ $lbranch != $branch ]]; then
    echo "set repo ${repo}'s branch to ${branch}"
	  git checkout $branch
  fi
fi

exit 0